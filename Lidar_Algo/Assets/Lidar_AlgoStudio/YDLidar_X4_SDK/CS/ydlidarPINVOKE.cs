//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


class ydlidarPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="SWIGRegisterExceptionCallbacks_ydlidar")]
    public static extern void SWIGRegisterExceptionCallbacks_ydlidar(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_ydlidar")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_ydlidar(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_ydlidar(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_ydlidar(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="SWIGRegisterStringCallback_ydlidar")]
    public static extern void SWIGRegisterStringCallback_ydlidar(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_ydlidar(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static ydlidarPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_Clear")]
  public static extern void LaserPointVector_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_Add")]
  public static extern void LaserPointVector_Add(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_size")]
  public static extern uint LaserPointVector_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_capacity")]
  public static extern uint LaserPointVector_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_reserve")]
  public static extern void LaserPointVector_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_LaserPointVector__SWIG_0")]
  public static extern global::System.IntPtr new_LaserPointVector__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_LaserPointVector__SWIG_1")]
  public static extern global::System.IntPtr new_LaserPointVector__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_LaserPointVector__SWIG_2")]
  public static extern global::System.IntPtr new_LaserPointVector__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_getitemcopy")]
  public static extern global::System.IntPtr LaserPointVector_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_getitem")]
  public static extern global::System.IntPtr LaserPointVector_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_setitem")]
  public static extern void LaserPointVector_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_AddRange")]
  public static extern void LaserPointVector_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_GetRange")]
  public static extern global::System.IntPtr LaserPointVector_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_Insert")]
  public static extern void LaserPointVector_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_InsertRange")]
  public static extern void LaserPointVector_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_RemoveAt")]
  public static extern void LaserPointVector_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_RemoveRange")]
  public static extern void LaserPointVector_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_Repeat")]
  public static extern global::System.IntPtr LaserPointVector_Repeat(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_Reverse__SWIG_0")]
  public static extern void LaserPointVector_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_Reverse__SWIG_1")]
  public static extern void LaserPointVector_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPointVector_SetRange")]
  public static extern void LaserPointVector_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_delete_LaserPointVector")]
  public static extern void delete_LaserPointVector(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_CYdLidar")]
  public static extern global::System.IntPtr new_CYdLidar();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_delete_CYdLidar")]
  public static extern void delete_CYdLidar(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_initialize")]
  public static extern bool CYdLidar_initialize(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_GetLidarVersion")]
  public static extern void CYdLidar_GetLidarVersion(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_turnOn")]
  public static extern bool CYdLidar_turnOn(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_doProcessSimple")]
  public static extern bool CYdLidar_doProcessSimple(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_turnOff")]
  public static extern bool CYdLidar_turnOff(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_disconnecting")]
  public static extern void CYdLidar_disconnecting(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_DescribeError")]
  public static extern string CYdLidar_DescribeError(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_getDriverError")]
  public static extern int CYdLidar_getDriverError(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_setWorkMode__SWIG_0")]
  public static extern bool CYdLidar_setWorkMode__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, byte jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_setWorkMode__SWIG_1")]
  public static extern bool CYdLidar_setWorkMode__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_enableSunNoise__SWIG_0")]
  public static extern void CYdLidar_enableSunNoise__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_enableSunNoise__SWIG_1")]
  public static extern void CYdLidar_enableSunNoise__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_enableGlassNoise__SWIG_0")]
  public static extern void CYdLidar_enableGlassNoise__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_enableGlassNoise__SWIG_1")]
  public static extern void CYdLidar_enableGlassNoise__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_getUserVersion")]
  public static extern bool CYdLidar_getUserVersion(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_setBottomPriority__SWIG_0")]
  public static extern void CYdLidar_setBottomPriority__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_setBottomPriority__SWIG_1")]
  public static extern void CYdLidar_setBottomPriority__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_getDeviceInfo__SWIG_0")]
  public static extern bool CYdLidar_getDeviceInfo__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_getDeviceInfo__SWIG_1")]
  public static extern bool CYdLidar_getDeviceInfo__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_setlidaropt__SWIG_0")]
  public static extern bool CYdLidar_setlidaropt__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_setlidaropt__SWIG_1")]
  public static extern bool CYdLidar_setlidaropt__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_setlidaropt__SWIG_2")]
  public static extern bool CYdLidar_setlidaropt__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_setlidaropt__SWIG_3")]
  public static extern bool CYdLidar_setlidaropt__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_getlidaropt_toInt")]
  public static extern bool CYdLidar_getlidaropt_toInt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_getlidaropt_toBool")]
  public static extern bool CYdLidar_getlidaropt_toBool(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_getlidaropt_toFloat")]
  public static extern bool CYdLidar_getlidaropt_toFloat(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_CYdLidar_getlidaropt_toString")]
  public static extern bool CYdLidar_getlidaropt_toString(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_os_init")]
  public static extern void os_init();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_os_isOk")]
  public static extern bool os_isOk();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_os_shutdown")]
  public static extern void os_shutdown();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_lidarPortList")]
  public static extern global::System.IntPtr lidarPortList();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_MAX_DEBUG_INDEX_get")]
  public static extern int MAX_DEBUG_INDEX_get();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_cVer_set")]
  public static extern void LaserDebug_cVer_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_cVer_get")]
  public static extern byte LaserDebug_cVer_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_debug2_set")]
  public static extern void LaserDebug_debug2_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_debug2_get")]
  public static extern byte LaserDebug_debug2_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_hfVer_set")]
  public static extern void LaserDebug_hfVer_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_hfVer_get")]
  public static extern byte LaserDebug_hfVer_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_fVer_set")]
  public static extern void LaserDebug_fVer_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_fVer_get")]
  public static extern byte LaserDebug_fVer_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_month_set")]
  public static extern void LaserDebug_month_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_month_get")]
  public static extern byte LaserDebug_month_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_day_set")]
  public static extern void LaserDebug_day_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_day_get")]
  public static extern byte LaserDebug_day_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_year_set")]
  public static extern void LaserDebug_year_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_year_get")]
  public static extern byte LaserDebug_year_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_numH_set")]
  public static extern void LaserDebug_numH_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_numH_get")]
  public static extern byte LaserDebug_numH_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_numL_set")]
  public static extern void LaserDebug_numL_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_numL_get")]
  public static extern byte LaserDebug_numL_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_health_set")]
  public static extern void LaserDebug_health_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_health_get")]
  public static extern byte LaserDebug_health_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_maxIndex_set")]
  public static extern void LaserDebug_maxIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserDebug_maxIndex_get")]
  public static extern byte LaserDebug_maxIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_LaserDebug")]
  public static extern global::System.IntPtr new_LaserDebug();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_delete_LaserDebug")]
  public static extern void delete_LaserDebug(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_stamp_set")]
  public static extern void LaserScan_stamp_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_stamp_get")]
  public static extern ulong LaserScan_stamp_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_scanFreq_set")]
  public static extern void LaserScan_scanFreq_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_scanFreq_get")]
  public static extern float LaserScan_scanFreq_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_sampleRate_set")]
  public static extern void LaserScan_sampleRate_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_sampleRate_get")]
  public static extern float LaserScan_sampleRate_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_points_set")]
  public static extern void LaserScan_points_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_points_get")]
  public static extern global::System.IntPtr LaserScan_points_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_config_set")]
  public static extern void LaserScan_config_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_config_get")]
  public static extern global::System.IntPtr LaserScan_config_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_moduleNum_set")]
  public static extern void LaserScan_moduleNum_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_moduleNum_get")]
  public static extern int LaserScan_moduleNum_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_envFlag_set")]
  public static extern void LaserScan_envFlag_set(global::System.Runtime.InteropServices.HandleRef jarg1, ushort jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserScan_envFlag_get")]
  public static extern ushort LaserScan_envFlag_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_LaserScan")]
  public static extern global::System.IntPtr new_LaserScan();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_delete_LaserScan")]
  public static extern void delete_LaserScan(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_YDLidar_lidar_set")]
  public static extern void YDLidar_lidar_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_YDLidar_lidar_get")]
  public static extern global::System.IntPtr YDLidar_lidar_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_YDLidar")]
  public static extern global::System.IntPtr new_YDLidar();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_delete_YDLidar")]
  public static extern void delete_YDLidar(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPoint_angle_set")]
  public static extern void LaserPoint_angle_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPoint_angle_get")]
  public static extern float LaserPoint_angle_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPoint_range_set")]
  public static extern void LaserPoint_range_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPoint_range_get")]
  public static extern float LaserPoint_range_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPoint_intensity_set")]
  public static extern void LaserPoint_intensity_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserPoint_intensity_get")]
  public static extern float LaserPoint_intensity_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_LaserPoint")]
  public static extern global::System.IntPtr new_LaserPoint();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_delete_LaserPoint")]
  public static extern void delete_LaserPoint(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_min_angle_set")]
  public static extern void LaserConfig_min_angle_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_min_angle_get")]
  public static extern float LaserConfig_min_angle_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_max_angle_set")]
  public static extern void LaserConfig_max_angle_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_max_angle_get")]
  public static extern float LaserConfig_max_angle_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_angle_increment_set")]
  public static extern void LaserConfig_angle_increment_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_angle_increment_get")]
  public static extern float LaserConfig_angle_increment_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_time_increment_set")]
  public static extern void LaserConfig_time_increment_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_time_increment_get")]
  public static extern float LaserConfig_time_increment_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_scan_time_set")]
  public static extern void LaserConfig_scan_time_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_scan_time_get")]
  public static extern float LaserConfig_scan_time_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_min_range_set")]
  public static extern void LaserConfig_min_range_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_min_range_get")]
  public static extern float LaserConfig_min_range_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_max_range_set")]
  public static extern void LaserConfig_max_range_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserConfig_max_range_get")]
  public static extern float LaserConfig_max_range_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_LaserConfig")]
  public static extern global::System.IntPtr new_LaserConfig();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_delete_LaserConfig")]
  public static extern void delete_LaserConfig(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserFan_stamp_set")]
  public static extern void LaserFan_stamp_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserFan_stamp_get")]
  public static extern ulong LaserFan_stamp_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserFan_npoints_set")]
  public static extern void LaserFan_npoints_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserFan_npoints_get")]
  public static extern uint LaserFan_npoints_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserFan_points_set")]
  public static extern void LaserFan_points_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserFan_points_get")]
  public static extern global::System.IntPtr LaserFan_points_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserFan_config_set")]
  public static extern void LaserFan_config_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserFan_config_get")]
  public static extern global::System.IntPtr LaserFan_config_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_LaserFan")]
  public static extern global::System.IntPtr new_LaserFan();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_delete_LaserFan")]
  public static extern void delete_LaserFan(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_string_t_data_set")]
  public static extern void string_t_data_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_string_t_data_get")]
  public static extern string string_t_data_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_string_t")]
  public static extern global::System.IntPtr new_string_t();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_delete_string_t")]
  public static extern void delete_string_t(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarPort_port_set")]
  public static extern void LidarPort_port_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarPort_port_get")]
  public static extern global::System.IntPtr LidarPort_port_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_LidarPort")]
  public static extern global::System.IntPtr new_LidarPort();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_delete_LidarPort")]
  public static extern void delete_LidarPort(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarVersion_hardware_set")]
  public static extern void LidarVersion_hardware_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarVersion_hardware_get")]
  public static extern byte LidarVersion_hardware_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarVersion_soft_major_set")]
  public static extern void LidarVersion_soft_major_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarVersion_soft_major_get")]
  public static extern byte LidarVersion_soft_major_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarVersion_soft_minor_set")]
  public static extern void LidarVersion_soft_minor_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarVersion_soft_minor_get")]
  public static extern byte LidarVersion_soft_minor_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarVersion_soft_patch_set")]
  public static extern void LidarVersion_soft_patch_set(global::System.Runtime.InteropServices.HandleRef jarg1, byte jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarVersion_soft_patch_get")]
  public static extern byte LidarVersion_soft_patch_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarVersion_sn_set")]
  public static extern void LidarVersion_sn_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LidarVersion_sn_get")]
  public static extern global::System.IntPtr LidarVersion_sn_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_new_LidarVersion")]
  public static extern global::System.IntPtr new_LidarVersion();

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_delete_LidarVersion")]
  public static extern void delete_LidarVersion(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserFanInit")]
  public static extern void LaserFanInit(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("ydlidar_csharp", EntryPoint="CSharp_LaserFanDestroy")]
  public static extern void LaserFanDestroy(global::System.Runtime.InteropServices.HandleRef jarg1);
}
